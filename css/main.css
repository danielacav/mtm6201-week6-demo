:root{
    --special-color:tomato;
    --second-color:#551cf1;
    --light-color:white;
    --dark-color:darkblue;

}


.container {
    max-width: 900px;
    margin: 0 auto;
}

/*space is descendent selector*/
nav ul {
    display: flex;
    list-style-type: none;
    padding: 0;
    margin: 0;
}
/*to make the elements spread in the available space*/
nav ul li{
    flex: 1;
}

/*Child combinator - to select only the p elements inside main, but not the descendants. */
main > p {
    font-size: 1.25rem;
}

/*adjacent combinator*/
h2+p {
    background-color: var(--dark-color);
    color: var(--light-color);
    padding: 1rem;
}

/*Siblings combinator*/
.stars span:hover ~ span{
    opacity: .5;
}

/* [] Attribute selectors
selecciona un atributo dentro de otro*/
a[href="#"]{
    color:var(--special-color);
}

a[href^="http"] {
    border-left: 4px solid var(--dark-color);
}

/*State related pseudo classes
To add this to elements we should use the following order.
To remember this, people use LoVE HAte  acronym- (link,visited,hover,focus,active */
nav a,
nav a:link,
nav a:visited {
    display: inline-block;
    text-decoration: none;
    text-transform: uppercase;
    transition: transform .5s;
}

/*The transition should always be assigned to the "regular" state*/
nav a:hover,
nav a:focus {
    text-decoration: underline;
    transform: scale(1.4);
}

/*To add a micro interaction so users feel like pressing down a button*/
nav a:active {
    transform: scale(1.4) translateX(10px);

}

/*PSEUDO ELEMENTS*/
a[href$=".pdf"]::after{
    content: "\2913";
    font-size: 1.25rem;
    color: var(--special-color);
}

h2+p::first-line{
    color: var(--special-color);
}

h3+p::first-letter{
    background-color: var(--second-color);
    color: var(--light-color);
    padding: .25rem;
    margin-right: .10rem;
}

/*Custom properties: Permite asignar estilos a toda la página y de tal forma si se decide cambiar alguno de esas propiededes automaticamente se modificará en otras.  Al crearlos es importante definir el "scope" y definir qué elementos del código pueden copiar el estilo asignado y cuales no
La propiedad "var" se usa puntualmente en los elemenots. como en Figma, usar, Webcat green

:root{
    --special-color:tomato;
    --second-color:#551cf1;
    --light-color:white;
    --dark-color:darkblue;

}*/

p {
    color: var(--dark-color);
}

